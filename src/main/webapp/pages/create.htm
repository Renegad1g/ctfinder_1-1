<div class="container">
	<div class="row">
		<div class="col s12 m3 l3 xl3">
			<h5>Создать</h5>
			<div class="card">
				<div class="card-content">
					<form id="create-offer-form">
	                    <label for="title">title:</label>
	                    <input type="text" name="title" id="title">
	                    <label for="content">content:</label>
	                    <input type="text" name="content" id="content">
	                    <!-- Сюда при помощи jquery помещается шаблон, заполненный offer types -->
                        <div id="offer-type-select" class="input-field">
                        	<select disabled>
			                	<option disabled="" selected="" value="">Offer type</option>
			                </select>
						</div>
						<div class="input-field">
							<input type="text" id="country-input" class="autocomplete">
							<label for="country-input">Страна</label>
						</div>
						<div class="input-field">
							<input type="text" id="city-input" class="autocomplete">
							<label for="city-input">Город</label>
						</div>
						<div class="input-field">
							<input type="number" id="c-count-input" min="1" placeholder="&infin;" value="&infin;">
							<label for="c-count-input">Вакантных мест</label>
						</div>
						<div class="input-field">
                      		<input type="text" id="start-date-input" class="datepicker">
                      		<label for="start-date-input">Дата желаемого старта</label>
						</div>
						<div class="input-field">
                      		<input type="text" id="finish-date-input" class="datepicker">
                      		<label for="finish-date-input">Дата желаемого окончания</label>
						</div>
						<div class="file-field input-field">
					      <div class="btn">
					        <span>Изображение</span>
					        <input type="file" id="image-input">
					      </div>
					      <div class="file-path-wrapper">
					        <input class="file-path validate" type="text">
					      </div>
					    </div>
	                    <button class="btn waves-effect waves-light" type="submit" name="action">Submit
	                        <i class="material-icons right">send</i>
	                    </button>
					</form>
				</div>
			</div>
		</div>

		<div class="col s12 m9 l9 xl9">
			<h5>Предложения</h5>
			<div class="row">
				<div class="col s6">
					<form>
						<label for="calendarFrom"> Начиная с: </label> <input
							id="calendarFrom" name="calendarFrom" type="date"> </input>
					</form>
				</div>
				<div class="col s6">
					<form>
						<label for="calendarTo"> по: </label> <input
							id="calendarTo" name="calendarTo" type="date"> </input>
					</form>
				</div>
			</div>

			<!-- Сюда при помощи jquery помещается шаблон таблицы, заполненный данными offers -->
			<div class="row">
				<div class="col s12 m12 l12 xl12">
					<div id="table-container"></div>
				</div>
			</div>
			<div class="row">
				<div class="col s12 m12 l12 xl12">
					<div class="card horizontal">
						<div class="card-stacked">
							<div class="card-content">
								<form>
									<button id="doneOrder" class="waves-effect waves-light btn"
										type="button">Выполнен</button>
									<button id="cancelOrder" class="waves-effect waves-light btn"
										type="button">Отмена</button>
									<button id="deleteOrder" class="waves-effect waves-light btn"
										type="button">Удаление</button>
								</form>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>
<script type="text/javascript">

	//Добавляем к стандартному типу Дата функцию коррекции даты по часовому поясу
	Date.prototype.toDateInputValue = (function() {
	    var local = new Date(this);
	    local.setMinutes(this.getMinutes() - this.getTimezoneOffset());
	    return local.toJSON().slice(0,10);
	});
	
	//Устанавливаем в элемент ввода Дата (Календарь) текущую дату,
    //вызывая на ней предварительно нашу корректирующую функцию
	$('form#create-offer-form input#start-date-input, form#create-offer-form input#finish-date-input')
		.val(new Date().toDateInputValue());
	
	//Задаем календарю окно допустимых дат - от текущей включительно -> infinity
    var minDate = new Date();
    $('form#create-offer-form input#start-date-input, form#create-offer-form input#finish-date-input')
	    .attr({
	       "min" : minDate.toDateInputValue(),
		});
    
    //console.log($('form#create-offer-form input#start-date-input, form#create-offer-form input#finish-date-input'));
  	//активация выбора даты
    $('form#create-offer-form input#start-date-input, form#create-offer-form input#finish-date-input').datepicker({
	    	'format':'dd-mm-yyyy'
	    	//, 'defaultDate':formatDate(new Date().toDateInputValue())
	    	, 'setDefaultDate':true
	    	, 'autoClose':true
		});
    
  	//Блокируем кнопк, пока не будет
    $('form#create-offer-form button').prop('disabled', 'disabled');

	app.handler(function() {

		//console.log('this ' + $(this));
		//var $container = $(this).find("#page-container");
		//console.log('container ' + $container);

		return function(params) {
			
			var countryAutocompleteItems = {};
			var cityAutocompleteItems = {};
			
			//Блокируем кнопк, пока не будет
			//$("form#create-offer-form button").attr('disabled', '');
			
			$('form#create-offer-form').validate({
		        rules: {
		        	title: {
		                required: true
		            },
		            content: {
		            	required: true
		            }
		        }
		    });
			
			var isFormValid = function(){
				
				if ($('form#create-offer-form').valid()) {
		        	
		            $('form#create-offer-form button').prop('disabled', false);
		        } else {
		        	
		            $('form#create-offer-form button').prop('disabled', 'disabled');
		        }
			}
			
			isFormValid();
		
		    $('form#create-offer-form input').on('keyup blur', function () {
		    	
		    	isFormValid();
		    });

			$.ajax({
				type: 'POST',
				url: '/offertype?action=get-all',
				dataType: 'json',
				cache: false
			}).done(function(responseText, textStatus, jqXHR) {
				  
				console.log(responseText);
				//Готовим шаблон списка при помощи библиотеки Hogan
	            var template = Hogan.compile(
            		'<select>'
                    +'<option disabled="" selected="" value="">type choice</option>'
                    +'{{#result}}'                
                    +   '<option value="{{id}}">'
                    +       '{{description}}'
                    +   '</option>'
                    +'{{/result}}'
	    			+'</select>'
	            );
	            //Заполняем шаблон данными и помещаем на веб-страницу
				$('#offer-type-select').html(template.render(responseText));
				$('#offer-type-select select').formSelect();
				
			}).fail(function(jqXHR, textStatus, errorThrown) {
				  
				console.log(textStatus);
			});
			
			var onCountryAutocompleteCallback = function(){

				console.log("country autocompleted");
			}
			
			var onCityAutocompleteCallback = function(){

				console.log("city autocompleted");
			}
			
			//country autocomplete
		    $('form#create-offer-form input#country-input').autocomplete({
		        data: countryAutocompleteItems
		        , onAutocomplete: onCountryAutocompleteCallback
			});
			
			//get created Autocomplete Instance from country-input
		    var countryAutocomplete =
		    	M.Autocomplete.getInstance($('form#create-offer-form input#country-input'));
			
			//handler for country-input keydown event
		    $('form#create-offer-form input#country-input').keydown(function(e) { 
				
				// only user-triggered event
				 if (e.originalEvent) {
					 
					 //clear city-input
					 $('form#create-offer-form input#city-input').val("");
					 //request data for country's Autocomplete
					 $.ajax({
					        url: "/country",
					        type: "POST",
					        data: {
					            'action': 'autocomplete'
					            , 'substring': $('form#create-offer-form input#country-input').val()
					        },
					        cache : false
					    }).done(function(newAutocompleteItems) {
					    	
					    	var newAutocompleteItemsObj =
					    		newAutocompleteItems.result.reduce(function(acc, cur, i) {
					  		  		acc[cur] = null;
					  		  		return acc;
					  			}, {});
					    	countryAutocomplete.updateData(newAutocompleteItemsObj);
					    	//
					    	//console.log(countryAutocomplete);
					    	countryAutocomplete.open();
					});
				 }
				 else {
				   // code-triggered event
				 }
			});
			
		  	//city autocomplete
		    $('form#create-offer-form input#city-input').autocomplete({
		        data: cityAutocompleteItems
		        , onAutocomplete: onCityAutocompleteCallback
			});
			
		    var cityAutocomplete =
		    	M.Autocomplete.getInstance($('form#create-offer-form input#city-input'));
			
			$('form#create-offer-form input#city-input').keydown(function(e) { 
					
				// only user-triggered event
				 if (e.originalEvent) {
				 	
					 $.ajax({
					        url: "/city",
					        type: "POST",
					        data: {
					            'action': 'autocomplete'
				            	, 'country': $('form#create-offer-form input#country-input').val()
					            , 'substring': $('form#create-offer-form input#city-input').val()
					        },
					        cache : false
					    }).done(function(newAutocompleteItems) {
					    	
					    	var newAutocompleteItemsObj =
					    		newAutocompleteItems.result.reduce(function(acc, cur, i) {
					  		  		acc[cur] = null;
					  		  		return acc;
					  			}, {});
					    	cityAutocomplete.updateData(newAutocompleteItemsObj);
					    	//console.log(cityAutocomplete);
							
					    	cityAutocomplete.open();
					});
				 }
				 else {
				   // code-triggered event
				 }
			});
			
			var imageBase64 = "";
			//console.log($('form#create-offer-form input#image-input'));
			$('form#create-offer-form input#image-input').change(function(ev){
				
				  //console.log($('form#create-offer-form input#image-input'));
				  var file = ev.target.files[0];
				  var reader = new FileReader();
				  reader.onloadend = function() {
		                        
		                        /*$.ajax({
		                            url: "/TestImgWebApp/image",
		                            type:'POST',
		                            data: {
		                                'image':reader.result
		                            }
		                          }).done(function(resp) {
		                              console.log(resp);
		                              $('img').attr('src',resp);
		                          });*/
		                        console.log('RESULT', reader.result);
		                        imageBase64 = reader.result;
				  }
				  reader.readAsDataURL(file);
			});
			
			$('form#create-offer-form button').click(function(ev){
				
				ev.preventDefault();
				//console.log($('form#create-offer-form c-count-input').val());
				var data = $('form#create-offer-form').serializeArray();
				data.push({name: 'offer-type', value: $('form#create-offer-form #offer-type-select select option:selected').val()});
				data.push({name: 'country', value: $('form#create-offer-form input#country-input').val()});
				data.push({name: 'city', value: $('form#create-offer-form input#city-input').val()});
				data.push({name: 'c-count', value: $('form#create-offer-form input#c-count-input').val()});
				data.push({name: 'start-date', value: $('form#create-offer-form input#start-date-input').val()});
				data.push({name: 'finish-date', value: $('form#create-offer-form input#finish-date-input').val()});
				data.push({name: 'image', value: imageBase64});
				console.log(data);
			});

			var preloaderHide = function() {

				$(".preloader-wrapper").css("display", "none");
			}

			setTimeout(preloaderHide, 500);
		};
	});
</script>