<div id="create-container" class="container">
	<div class="row">
		<div class="col s12 m3 l3 xl3">
			<h5>Создать</h5>
			<div class="card">
				<div class="card-content">
					<form id="create-offer-form">
						<div class="input-field">
		                    <input type="text" name="title" id="title">
		                    <label for="title">title:</label>
	                    </div>
	                    <div class="input-field">
		                    <label for="content">content:</label>
		                    <textarea name="content" id="content" class="materialize-textarea"></textarea>
	                    </div>
	                    <!-- Сюда при помощи jquery помещается шаблон, заполненный offer types -->
                        <div id="offer-type-select" class="input-field">
                        	<select id="offertypeselector" name="offertypeselector" required="required" class="validate">
			                	<option disabled selected="selected" value="">Тип задания</option>
			                </select>
						</div>
						<br>
						<div class="input-field">
							<input type="text" id="country-input" class="autocomplete" autocomplete="off">
							<label for="country-input">Страна</label>
						</div>
						<div class="input-field">
							<input type="text" id="city-input" class="autocomplete" autocomplete="off">
							<label for="city-input">Город</label>
						</div>
						<div class="input-field">
							<input type="number" id="c-count-input" min="1" placeholder="&infin;" value="">
							<label for="c-count-input">Вакантных мест</label>
						</div>
						<div class="row">
							<div class="input-field col s9">
	                      		<input type="text" id="start-date-input" class="datepicker">
	                      		<label for="start-date-input">Желаемая дата старта</label>
                      		</div>
                      		<div class="input-field col s3">
                      			<input type="button" class="waves-effect waves-light btn" id="remove-start-date" value="X">
							</div>
						</div>
						<div class="row">
							<div class="input-field col s9">
	                      		<input type="text" id="finish-date-input" class="datepicker">
	                      		<label for="finish-date-input">Желаемая дата окончания</label>
	                   		</div>
	                   		<div class="input-field col s3">
						        <input type="button" class="waves-effect waves-light btn" id="remove-finish-date" value="X">
		                    </div>
						</div>
						<div class="file-field input-field">
							<label for="image-input">Изображение</label>
							<div class="btn">
							  <span><i class="material-icons right">image</i></span>
							  <input type="file" id="image-input">
							</div>
							<div class="file-path-wrapper">
							  <input class="file-path validate" type="text">
							</div>
					    </div>
	                    <button id="submit-new-order" class="btn waves-effect waves-light" type="submit" name="action">Submit
	                        <i class="material-icons right">send</i>
	                    </button>
	                    <button id="cancell-new-order" class="btn waves-effect waves-light" type="submit" name="cancell">Cancell</button>
					</form>
				</div>
			</div>
		</div>

		<div class="col s12 m9 l9 xl9">
			<h5 id="offers-title">Предложения</h5>
			<div class="row" id="offers-date-filter">
				<div class="col s6">
					<form>
						<label for="calendarFrom"> Начиная с: </label>
						<input id="calendarFrom" name="calendarFrom" type="text" class="datepicker"> </input>
					</form>
				</div>
				<div class="col s6">
					<form>
						<label for="calendarTo"> по: </label>
						<input id="calendarTo" name="calendarTo" type="text" class="datepicker"> </input>
					</form>
				</div>
			</div>

			<!-- Сюда при помощи jquery помещается шаблон таблицы, заполненный данными offers -->
			<div class="row">
				<div class="col s12 m12 l12 xl12">
					<div id="offer-table-container"></div>
				</div>
			</div>
			<div class="row" id="offers-buttons">
				<div class="col s12 m12 l12 xl12">
					<div class="card horizontal">
						<div class="card-stacked">
							<div class="card-content">
								<form>
									<button id="editOffer" class="waves-effect waves-light btn"
										type="button">Изменить</button>
									<button id="deleteOffer" class="waves-effect waves-light btn"
										type="button">Удаление</button>
									<button id="changeOfferState" data-target="offer-create-modal" class="modal-trigger waves-effect waves-light btn"
										type="button">Состояние</button>
								</form>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
	<div id="offer-create-modal" class="modal">
		<div class="modal-content">
		    
		</div>
		<div class="modal-footer">
			<a href="#!" class="modal-action modal-close waves-effect waves-green btn-flat">Ok</a>
		</div>
	</div>
	<!-- <div id="offer-state" class="modal">
		<div class="modal-content">
		    
		</div>
		<div class="modal-footer">
			<a href="#!" class="modal-action modal-close waves-effect waves-green btn-flat">Ok</a>
		</div>
	</div> -->
</div>
<script type="text/javascript">
		
	//активируем модальное окно, боковую панель и схлопывающиеся области
	$('#create-container .modal').modal();
	//Устанавливаем в элемент ввода Дата (Календарь) текущую дату,
    //вызывая на ней предварительно нашу корректирующую функцию
	$('form#create-offer-form input#start-date-input, form#create-offer-form input#finish-date-input')
		.val(new Date().toDateInputValue());
	
	//Задаем календарю окно допустимых дат - от текущей включительно -> infinity
    var minDate = new Date();
    /*$('form#create-offer-form input#start-date-input, form#create-offer-form input#finish-date-input')
	    .attr({
	       "min" : minDate.toDateInputValue(),
		});*/
    
    //Date range filter
    var nowDate = new Date();
    var lastYearDate = new Date();
    lastYearDate.setDate(lastYearDate.getDate() - 365);
    $('div#offers-date-filter input#calendarFrom')
		.val(lastYearDate.toDateInputValue());
    $('div#offers-date-filter input#calendarTo')
		.val(nowDate.toDateInputValue());
    
    //console.log($('form#create-offer-form input#start-date-input, form#create-offer-form input#finish-date-input'));
  	//активация выбора даты
    $('form#create-offer-form input#start-date-input, form#create-offer-form input#finish-date-input').datepicker({
	    	'format':'dd-mm-yyyy'
	    	//, 'defaultDate':formatDate(new Date().toDateInputValue())
	    	, 'minDate':minDate
	    	, 'setDefaultDate':true
	    	, 'autoClose':true
		});
  	
    $('div#offers-date-filter input#calendarFrom, div#offers-date-filter input#calendarTo').datepicker({
    	'format':'dd-mm-yyyy'
    	, 'setDefaultDate':true
    	, 'autoClose':true
	});
  	
    $('form#create-offer-form input#remove-start-date').click(function(ev){
		
		ev.preventDefault();
		$('form#create-offer-form input#start-date-input').val("");
    });
    
	$('form#create-offer-form input#remove-finish-date').click(function(ev){
		
		ev.preventDefault();
		$('form#create-offer-form input#finish-date-input').val("");
    });
    
  	//Блокируем кнопк, пока не будет
    $('form#create-offer-form #submit-new-order').prop('disabled', 'disabled');

	app.handler(function() {

		//console.log('this ' + $(this));
		//var $container = $(this).find("#page-container");
		//console.log('container ' + $container);

		return function(params) {
			
			var selectedOfferId = 0;
			
			var cursorString = null;
		    var offerLimit = 10;
		    var offerCounter = 0;
		    var offerTablePopulating = false;
			
			var countryAutocompleteItems = {};
			var cityAutocompleteItems = {};
			
			function resetInfinityScrollInfo(){
				
				selectedOfferId = 0;
				
				cursorString = null;
				offerLimit = 10;
			    offerCounter = 0;
			    offerTablePopulating = false;
			    
			    $('#offer-table-container tbody').html('');
			}
			
			//Блокируем кнопк, пока не будет
			$("form#create-offer-form #submit-new-order").attr('disabled', 'disabled');
			
			$.validator.setDefaults(
					{
						ignore: [],
						errorClass: 'invalid',
					    validClass: "valid",
					    errorPlacement: function (error, element) {
					        $(element)
					            .closest("form")
					            .find("label[for='" + element.attr("id") + "']")
					            .attr('data-error', error.text());
					    },
					    submitHandler: function (form) {
					        console.log('form ok');
					    }
					}
				);
			
			$('form#create-offer-form').validate({
		        rules: {
		        	title: {
		                required: true
		            },
		            content: {
		            	required: true
		            }
		        },
		        messages: {
		        	title: "Заголовок не заполнен",
		        	content: "Описание не заполнено"
		        }
		    });
			
			var isFormValid = function(){
				
				var isTitleContentValid = false;
				var isTypeValid = false;
				var isDateRangeValid = false;
				
				if ($('form#create-offer-form').valid()) {
		        	
		            //$('form#create-offer-form button').prop('disabled', false);
					isTitleContentValid = true;
		        } else {
		        	
		            //$('form#create-offer-form button').prop('disabled', 'disabled');
		        }
				
				if($('form#create-offer-form #offer-type-select select option:selected').val() == ""){
					
					//$('form#create-offer-form #offer-type-select select')[0].setCustomValidity('Тип задания не выбран');
					//$('form#create-offer-form button').prop('disabled', 'disabled');
					//console.log('setCustomValidity -');
					
				} else {
					
					//$('form#create-offer-form #offer-type-select select')[0].setCustomValidity('');
					//$('form#create-offer-form button').prop('disabled', false);
					//console.log('setCustomValidity +');
					isTypeValid = true;
				}
				
				var startDateInputVal = $('form#create-offer-form input#start-date-input').val();
				var finishDateInputVal = $('form#create-offer-form input#finish-date-input').val();
				
				if(startDateInputVal != '' && finishDateInputVal != ''){

					if(finishDateInputVal.localeCompare(startDateInputVal) >= 0){
						
						isDateRangeValid = true;
					} else {
						
					}
				} else {
					
					isDateRangeValid = true;
				}
				
				if(isTitleContentValid && isTypeValid && isDateRangeValid){
					
					$('form#create-offer-form #submit-new-order').prop('disabled', false);
				} else {
					
					$('form#create-offer-form #submit-new-order').prop('disabled', 'disabled');
				}
			}
		
		    $('form#create-offer-form input').on('keyup blur', function () {
		    	
		    	isFormValid();
		    });
		    
		    $(document).on(
		    		'change'
		    		, 'form#create-offer-form #offer-type-select select'
		    		, function() {
		        
		    	isFormValid();
		    });
		    
		    $(document).on(
		    		'change'
		    		, 'form#create-offer-form input#start-date-input, form#create-offer-form input#finish-date-input'
		    		, function() {
		        
		    	isFormValid();
		    });
		    
		    isFormValid();
		    
		    //Функция получения списка всех типов предложений
		    var populateOfferTypesSelect = function(){
		    	
		    	$.ajax({
					type: 'POST',
					url: '/offertype?action=get-all',
					dataType: 'json',
					cache: false
				}).done(function(responseText, textStatus, jqXHR) {
					  
					//Готовим шаблон списка при помощи библиотеки Hogan
		            var template = Hogan.compile(
	            		'<select>'
	                    +'<option disabled="" selected="" value="">type choice</option>'
	                    +'{{#result}}'                
	                    +   '<option value="{{id}}">'
	                    +       '{{description}}'
	                    +   '</option>'
	                    +'{{/result}}'
		    			+'</select>'
		            );
		            //Заполняем шаблон данными и помещаем на веб-страницу
					$('#offer-type-select').html(template.render(responseText));
					$('#offer-type-select select').formSelect();
					
				}).fail(function(jqXHR, textStatus, errorThrown) {
					  
					//console.log(textStatus);
					alert("Ошибка получения списка типов заданий: " + jqXHR);
				});
		    }

		    populateOfferTypesSelect();
			
			var onCountryAutocompleteCallback = function(){

				console.log("country autocompleted");
			}
			
			var onCityAutocompleteCallback = function(){

				console.log("city autocompleted");
			}
			
			//country autocomplete
		    $('form#create-offer-form input#country-input').autocomplete({
		        data: countryAutocompleteItems
		        , onAutocomplete: onCountryAutocompleteCallback
			});
			
			//get created Autocomplete Instance from country-input
		    var countryAutocomplete =
		    	M.Autocomplete.getInstance($('form#create-offer-form input#country-input'));
			
			//handler for country-input keydown event
		    $('form#create-offer-form input#country-input').keydown(function(e) { 
				
				// only user-triggered event
				 if (e.originalEvent) {
					 
					 //clear city-input
					 $('form#create-offer-form input#city-input').val("");
					 //request data for country's Autocomplete
					 $.ajax({
					        url: "/country",
					        type: "POST",
					        data: {
					            'action': 'autocomplete'
					            , 'substring': $('form#create-offer-form input#country-input').val()
					        },
					        cache : false
					    }).done(function(newAutocompleteItems) {
					    	
					    	var newAutocompleteItemsObj =
					    		newAutocompleteItems.result.reduce(function(acc, cur, i) {
					  		  		acc[cur] = null;
					  		  		return acc;
					  			}, {});
					    	countryAutocomplete.updateData(newAutocompleteItemsObj);
					    	//
					    	countryAutocomplete.open();
					});
				 }
				 else {
				 }
			});
			
		  	//city autocomplete
		    $('form#create-offer-form input#city-input').autocomplete({
		        data: cityAutocompleteItems
		        , onAutocomplete: onCityAutocompleteCallback
			});
			
		    var cityAutocomplete =
		    	M.Autocomplete.getInstance($('form#create-offer-form input#city-input'));
			
		    $('form#create-offer-form input#city-input').unbind("keydown");
			$('form#create-offer-form input#city-input').keydown(function(e) { 
					
				// only user-triggered event
				 if (e.originalEvent) {
				 	
					 $.ajax({
					        url: "/city",
					        type: "POST",
					        data: {
					            'action': 'autocomplete'
				            	, 'country': $('form#create-offer-form input#country-input').val()
					            , 'substring': $('form#create-offer-form input#city-input').val()
					        },
					        cache : false
					    }).done(function(newAutocompleteItems) {
					    	
					    	var newAutocompleteItemsObj =
					    		newAutocompleteItems.result.reduce(function(acc, cur, i) {
					  		  		acc[cur] = null;
					  		  		return acc;
					  			}, {});
					    	cityAutocomplete.updateData(newAutocompleteItemsObj);							
					    	cityAutocomplete.open();
					});
				 }
				 else {
				   // code-triggered event
				 }
			});
			
			//Готовим функцию таблицы
		    function createOfferTable() {
				
		    	$('#offer-table-container').html(
		    	
		    			'<table class="table">'
						+  '<thead>'
						+    '<tr>'
						+      '<th>ID</th>'
						+       '<th>title</th>'
		                +       '<th>type</th>'
		                +       '<th>image</th>'
		                +       '<th>status</th>'
		                +       '<th>created</th>'
						+    '</tr>'
						+  '</thead>'
						+  '<tbody>'
		                +  '</tbody>'
						+ '</table>'
		    	);
			}
			
		    createOfferTable();
			
			//Готовим функцию заполнения таблицы данными о заказах (строками расписания)
		    function populateOfferTable() {
		        
		    	/*var offerTableHeight =
		    		$(window).height()
		    			- $('nav').height();
		    			//- $('footer').height();
		    	console.log('$(window).height() ' + $(window).height());
		    	console.log("$('nav').height() " + $('nav').height());
		    	console.log("$('footer').height() " + $('footer').height());
		    	console.log(offerTableHeight);
		    	offerTableHeight =
		    		offerTableHeight
		    			- $('h5#offers-title').height()
		    			- $('div#offers-date-filter').height()
		    			- $('div#offer-table-container').height()
		    			- $('div#offers-buttons').height();
		    	var offerRowHeight =
		    		$('div#offer-table-container thead>tr').height();
		    	var offerLimit = Math.ceil(offerTableHeight / offerRowHeight);
		    	console.log(offerTableHeight);
		    	console.log(offerRowHeight);
		    	console.log(offerLimit);*/
		    			    	
				//Добавляем на место таблицы полосу бесконечного прогресса - пока будет ожидаться ответ сервера
		        preloaderOn("nocover");
		    	//Отправляем асинхронный запрос на сервер (в файл api/orders.php)
		        //с указанием действия Получить заказы и выбранной даты
		        var dateFrom = $('div#offers-date-filter input#calendarFrom').val();
		        var dateTo = $('div#offers-date-filter input#calendarTo').val();
		        var urlString =
		        	"/offer?action=get-range"
		        			+"&in_memory=true"
		        			+"&limit=" + offerLimit
		        			+"&start-from=" + offerCounter
		        			+"&created-date-from=" + dateFrom
		        			+"&created-date-to=" + dateTo
		        			+"&projection=table-row";
		        //console.log(urlString);
		    	$.ajax({
		            url: urlString,
		            dataType: 'json',
		            type: "POST",
		            cache : false
		        }).done(function(data) {
		            
		        	fetchedCount = data.result.length;
		        	if(fetchedCount > 0){
		        		
		        		if(offerCounter == 0 && offerLimit == 10){
			        		
			        		offerLimit = 1;
			        		offerCounter += fetchedCount;
			        	} else if(offerLimit == 1) {
			        		
			        		offerCounter++;
			        	}
			        	//var offers = data.result[0].items;
			            //В ответ получаем json-строку с данными о
			            //для выбранной даты
			            /*$.each(offers, function(index, value) {
			                
			                //Форматируем даты создания записей перед подстановкой в шаблон
			                offers[index].created_at = formatDate(value.created_at);
			            });*/

			            //Готовим шаблон таблицы заказов (расписания) при помощи библиотеки Hogan
					  	var template = Hogan.compile(
				  			'{{#result}}'
							+ 	'<tr>'
							+   	'<th scope="row">{{id}}</th>'
							+             '<td>{{title}}</td>'
			                +             '<td>{{offer_type}}</td>'
			                +             '<td>'
			                +				'<form>'
							+					'<button id="showOrderImage" data-target="offer-create-modal" class="modal-trigger waves-effect waves-light btn"'
							+						'type="button"><i class="material-icons right">image</i></button>'
							+				'</form>'
			                +			  '</td>'
			                +             '<td>{{state}}</td>'
			                +             '<td>{{created_at}}</td>'
			                +          '</tr>'
				      		+ '{{/result}}'
				  		);
					  	//Заполняем шаблон данными и помещаем на веб-страницу
		            	$('#offer-table-container tbody').append(template.render(data));

				  		//Расцветка для разных состояний offer, классы цветов определены в файле стилей
			            $("#offer-table-container td:contains('in_progress')").parent().addClass("BlueRow");
			            $("#offer-table-container td:contains('fulfilled')").parent().addClass("GreenRow");
			            $("#offer-table-container td:contains('suspended')").parent().addClass("RedRow");
			            //Блокируем кнопки работы со строками таблицы, пока не будет выбрана строка
			            $("#changeOfferState, #editOffer, #deleteOffer").attr('disabled', '');
			            //Устанавливаем обработчик кликов на все строки таблицы кроме заголовка
			            $("#offer-table-container tr:not(:first)").unbind("click");
			            $("#offer-table-container tr:not(:first)").click(function(){

			                //Разблокируем кнопки, когда выбрана строка таблицы
			                $("#changeOfferState, #editOffer, #deleteOffer").removeAttr('disabled');
			                //Отмечаем текст выбранной строки зеленым цветом, с остальных строк выделение убираем
			                //(оно могло быть ранее установлено на одну из строк)
			                $(this).addClass("selectedTableRow").siblings().removeClass("selectedTableRow");
			            });
			            
			            //Очищаем списки в форме
			            /*$('#manicurists-select select')
			                .find('option')
			                .remove();

			            $('#time-select select')
			                .find('option')
			                .remove();*/
			            //Отключаем элементы ввода в форме
			            /*$('#time-select select').attr('disabled', '');
			            $('form#create-order button').attr('disabled', '');*/
			            //Заполняем список выбора мастеров
			            //populateManicuristsList();
			            //Активируем список выбора времени
			            //$('#time-select select').formSelect();
			            /*edit end*/
		        	} else {
		        		
		        		offerCounter = "full";
		        	}
		        	preloaderOff();
		        	offerTablePopulating = false;
		        });
		    }
			
		    if(offerCounter != "full"){
			    //Вызываем функцию заполнения таблицы данными о заказах
				populateOfferTable();
		    }
		    
			$(window).scroll(function() {
				
				if(offerCounter != "full" && !offerTablePopulating){
					
					var footerHeight = 283;
					if ($(window).scrollTop() >=
							($(document).height()
								- footerHeight
								- $(window).height())) {
						offerTablePopulating = true;  
				    	populateOfferTable();
				    }
				}
			});
		    
		    $(document).on(
		    		'change'
		    		, 'div#offers-date-filter input#calendarFrom, div#offers-date-filter input#calendarTo'
		    		, function() {
		        
	    			resetInfinityScrollInfo();
		    		populateOfferTable();
		    });
			
			var imageBase64 = "";
			$('form#create-offer-form input#image-input').unbind("change");
			$('form#create-offer-form input#image-input').change(function(ev){
				
				  //console.log($('form#create-offer-form input#image-input'));
				  var file = ev.target.files[0];
				  
				  ImageTools.resize(file, {
				        width: 300, // maximum width
				        height: 300 // maximum height
				    }, function(blob, didItResize) {
						 // didItResize will be true if it managed to resize it, otherwise false (and will return the original file as 'blob')
						 //document.getElementById('preview').src = window.URL.createObjectURL(blob);
						 var reader = new FileReader();
						 reader.onloadend = function() {
						
			                   imageBase64 = reader.result;
						 }
						 reader.readAsDataURL(blob);
				    });
			});
			
			var resetNewOrderForm = function(){
				
				$('form#create-offer-form input#title').val('');
				$('form#create-offer-form textarea#content').val('');
				
				$('form#create-offer-form input#country-input').val('');
				$('form#create-offer-form input#city-input').val('');
				$('form#create-offer-form input#c-count-input').val('');
				$('form#create-offer-form input#start-date-input').val('');
				$('form#create-offer-form input#finish-date-input').val('');
				$('form#create-offer-form input#image-input').val('');
				$('form#create-offer-form input.file-path').val('');
				
				$('form#create-offer-form input#start-date-input, form#create-offer-form input#finish-date-input').datepicker({
			    	'format':'dd-mm-yyyy'
			    	, 'minDate':minDate
			    	, 'setDefaultDate':true
			    	, 'autoClose':true
				});
			}
			
			$('form#create-offer-form #submit-new-order').unbind("click");
			//Кнопка запроса на создание или обновление предложения
			$('form#create-offer-form #submit-new-order').click(function(ev){
				
				ev.preventDefault();
				//console.log($('form#create-offer-form c-count-input').val());
				
				preloaderOn();
				
				//
				var selectedOfferTypeIndex =
					$('form#create-offer-form #offer-type-select li.selected').index();
				//console.log($('form#create-offer-form #offer-type-select li.selected'));
				//console.log($('form#create-offer-form #offer-type-select li.selected').index());
				var selectedOfferTypeId =
					$('form#create-offer-form #offer-type-select select option')
						.eq(selectedOfferTypeIndex)
						.val();
				//console.log($('form#create-offer-form #offer-type-select select option'));
				//console.log($('form#create-offer-form #offer-type-select select option').eq(selectedOfferTypeIndex));
				//console.log($('form#create-offer-form #offer-type-select select option').eq(selectedOfferTypeIndex).val());
				//console.log(selectedOfferTypeId);
				
				var data = $('form#create-offer-form').serializeArray();
				data.push({name: 'action', value: 'create'});
				data.push({name: 'offer_type_id', value: selectedOfferTypeId});
				data.push({name: 'country_name', value: fixedEncodeURI($('form#create-offer-form input#country-input').val())});
				data.push({name: 'city_name', value: fixedEncodeURI($('form#create-offer-form input#city-input').val())});
				data.push({name: 'c-count', value: $('form#create-offer-form input#c-count-input').val()});
				data.push({name: 'start-date', value: $('form#create-offer-form input#start-date-input').val()});
				data.push({name: 'finish-date', value: $('form#create-offer-form input#finish-date-input').val()});
				data.push({name: 'image', value: imageBase64});
				//
				if(selectedOfferId != 0){
					var id = selectedOfferId;
					data.push({name: 'id', value: id});
					selectedOfferId = 0;
				}
				
				$.ajax({
			        url: "/offer",
			        type: "POST",
			        data: data,
			        cache : false
			    }).done(function(resp) {
			    	
			    	if(resp.error != "" || resp == ""){
			    		
			    		alert("Ошибка создания предложения");
			    		//console.log(resp + " " + resp.error);
			    	} else if (resp.result[0] == "created"){
			    		
			    		alert("Предложение успешно создано");
			    		resetInfinityScrollInfo();
			    		populateOfferTable();
			    	} else if (resp.result[0] == "updated"){
			    		
			    		alert("Предложение успешно обновлено");
			    		resetInfinityScrollInfo();
			    		populateOfferTable();
			    	}
				}).fail(function(jqXHR, textStatus, errorThrown) {
					  
					alert("Ошибка: " + jqXHR);
				}).always(function() {
				    
					preloaderOff();
			  	});
				
				//Reset the form
				populateOfferTypesSelect();
				
				resetNewOrderForm();
				
				isFormValid();
				$("form#create-offer-form #submit-new-order").attr('disabled', 'disabled');
				
				//console.log($('form#create-offer-form textarea#content'));
				//console.log($('form#create-offer-form textarea#content').html());
			});
			
			$('form#create-offer-form #cancell-new-order').unbind("click");
			//Кнопка запроса на создание или обновление предложения
			$('form#create-offer-form #cancell-new-order').click(function(ev){
				
				ev.preventDefault();
				
				populateOfferTypesSelect();
				
				resetNewOrderForm();
				
				selectedOfferId = 0;
				
				isFormValid();
				$("form#create-offer-form #submit-new-order").attr('disabled', 'disabled');
			});
			
			/* Offer management buttons */
			
			//Функция переключения формы создания предложения в состояние обновления
		    function editOffer(){
		
		        if ($('.selectedTableRow').find('th').length === 0) {
		
		            alert('Сначала выберите одну строку в таблице');
		        } else {
		        	
		        	var id = $('.selectedTableRow').find('th').text();
	    			
	    			var urlString =
			        	"/offer?action=get"
			        			+"&id=" + id
			        			+"&projection=table-row-edit";
	    			
	    			$.ajax({
			            url: urlString,
			            type: "POST",
			            cache : false
			        }).done(function(data) {
			        	
			        	if(data.result != null && data.result.length > 0){
				        	populateOfferTypesSelect();
				        	resetNewOrderForm();
				        	isFormValid();
				        	$("form#create-offer-form #submit-new-order").attr('disabled', 'disabled');
				        	
				        	selectedOfferId = id;
				        	
				        	$('form#create-offer-form input#title')
				        		.val(data.result[0].title);
							$('form#create-offer-form textarea#content')
								.val(data.result[0].content);
							
							var country =
								data.result[0].country != "-"
									? data.result[0].country
									: "";
							var city =
								data.result[0].city != "-"
									? data.result[0].city
									: "";
							var collaboratorsCount =
								data.result[0].collaborators_count != "-1"
									? data.result[0].collaborators_count
									: "";
							var startDate = data.result[0].desired_start_date;
							var finishDate = data.result[0].desired_finish_date;
							$('form#create-offer-form input#country-input').val(country);
							$('form#create-offer-form input#city-input').val(city);
							$('form#create-offer-form input#c-count-input').val(collaboratorsCount);
							$('form#create-offer-form input#start-date-input').val(startDate);
							$('form#create-offer-form input#finish-date-input').val(finishDate);
			        	} else {
			        		alert("Ошибка");
			        	}
			        }).fail(function(jqXHR, textStatus, errorThrown) {
						  
						alert("Ошибка: " + jqXHR);
					}).always(function() {
					    
						preloaderOff();
				  	});;
		        }
			}
			
		  	//Функция обновления состояния предложения
		    function editOfferState(){
		
		        if ($('.selectedTableRow').find('th').length === 0) {
		
		            alert('Сначала выберите одну строку в таблице');
		        } else {
		        	
		        	preloaderOn("nocover");
			        $('#create-container .modal-content').html('');
			        //$('#create-container .modal-footer').html('');
			        
			        var urlString = "/state?action=get-all";
	    			
	    			$.ajax({
			            url: urlString,
			            type: "POST",
			            cache : false
			        }).done(function(data) {
			        	
			        	if(data.result != null){
			        		
			        		var template = Hogan.compile(
			        				'<form id="change-state-form" action="#">'
				    	                +'{{#result}}'
				    	                +'<p>'
				    						+'<label>'
				    							+'<input id="{{id}}" type="radio" name="change-state-group" />'
				    							+'<span>{{title}}</span>'
				    						+'</label>'
				    					+'</p>'
				    					+'{{/result}}'
			    					+'</form>'
			    	            );
		    	            //Заполняем шаблон данными и помещаем на веб-страницу
		    				$('#create-container .modal-content').html(template.render(data));
		    	            
		    				preloaderOn("nocover");
		    				var oldOfferId = $('.selectedTableRow').find('th').text();
		    				var oldStateUrlString =
					        	"/offer?action=get"
					        			+"&id=" + oldOfferId
					        			+"&projection=state";
		    				$.ajax({
					            url: oldStateUrlString,
					            type: "POST",
					            cache : false
					        }).done(function(data) {
					        	
					        	if(data.result != null && data.result.length > 0){
					        		
					        		var oldStateId = data.result[0];
					        		$('form#change-state-form input[id=' + oldStateId + ']')
					        			.attr('checked', 'checked');
					        		
					        		var changeOfferState = function(newStateId){
										
					        			preloaderOn("nocover");
					        			console.log(newStateId);
					        			var newStateUrlString =
								        	"/offer?action=update"
								        			+"&id=" + oldOfferId
								        			+"&new_state=" + newStateId;
					        			$.ajax({
								            url: newStateUrlString,
								            type: "POST",
								            cache : false
								        }).done(function(data) {
								        	
								        	if(data.result != null && data.result[0] == "updated"){
								        		
								        		$('#create-container .modal-content')
								        			.html("Состояние предложения обновлено");
								        	} else {
								        		
								        		$('#create-container .modal-content')
							        				.html("Ошибка");
								        	}
								        }).fail(function(jqXHR, textStatus, errorThrown) {
											  
											$('#create-container .modal-content')
					        					.html("Ошибка: " + jqXHR);
										}).always(function() {
										    
											preloaderOff();
									  	});
				    				}
				    				
				    				//обработчик выбора одного из чекбоксов фильтра по	
				    				$('form#change-state-form input[type=radio]').unbind("change");
				    				$('form#change-state-form input[type=radio]').change(function() {

				    				    if(this.checked) {
				    						
				    				    	changeOfferState(
			    				    			$('form#change-state-form input[type=radio]:checked').attr('id')
				    						);
				    				    }
				    				});
				    				
					        	} else {
					        		alert('Ошибка');
					        	}
					        }).fail(function(jqXHR, textStatus, errorThrown) {
								  
								alert("Ошибка: " + jqXHR);
							}).always(function() {
							    
								preloaderOff();
						  	});
		    	            
		    				
			        	} else {
			        		alert('Ошибка');
			        	}
			        }).fail(function(jqXHR, textStatus, errorThrown) {
						  
						alert("Ошибка: " + jqXHR);
					}).always(function() {
					    
						preloaderOff();
				  	});
		        	/*var id = $('.selectedTableRow').find('th').text();
	    			
	    			var urlString =
			        	"/offer?action=get"
			        			+"&id=" + id
			        			+"&projection=table-row-edit";
	    			
	    			$.ajax({
			            url: urlString,
			            type: "POST",
			            cache : false
			        }).done(function(data) {
			        	
			        	if(data.result != null && data.result.length > 0){
				        	populateOfferTypesSelect();
				        	resetNewOrderForm();
				        	isFormValid();
				        	$("form#create-offer-form #submit-new-order").attr('disabled', 'disabled');
				        	
				        	selectedOfferId = id;
				        	
				        	$('form#create-offer-form input#title')
				        		.val(data.result[0].title);
							$('form#create-offer-form textarea#content')
								.val(data.result[0].content);
							
							var country =
								data.result[0].country != "-"
									? data.result[0].country
									: "";
							var city =
								data.result[0].city != "-"
									? data.result[0].city
									: "";
							var collaboratorsCount =
								data.result[0].collaborators_count != "-1"
									? data.result[0].collaborators_count
									: "";
							var startDate = data.result[0].desired_start_date;
							var finishDate = data.result[0].desired_finish_date;
							$('form#create-offer-form input#country-input').val(country);
							$('form#create-offer-form input#city-input').val(city);
							$('form#create-offer-form input#c-count-input').val(collaboratorsCount);
							$('form#create-offer-form input#start-date-input').val(startDate);
							$('form#create-offer-form input#finish-date-input').val(finishDate);
			        	} else {
			        		alert("Ошибка");
			        	}
			        }).fail(function(jqXHR, textStatus, errorThrown) {
						  
						alert("Ошибка: " + jqXHR);
					}).always(function() {
					    
						preloaderOff();
				  	});*/
		        }
			}
			
		  	//Обработчик кнопки Выполнен
		  	$('#editOffer').unbind("click");
		    $('#editOffer').click(function(ev){

		        ev.preventDefault();

		        editOffer();
			});
		    
		  	//Обработчик кнопки Состояние
		  	$('#changeOfferState').unbind("click");
		    $('#changeOfferState').click(function(ev){

		        ev.preventDefault();

		        editOfferState();
			});
		    
		    //Обработчик кнопки показа изображения одного из предложений из таблицы
		    $(document).unbind("click");
			$(document).on(
	    		'click'
	    		, '#showOrderImage'
	    		, function(ev){
	    			
	    			ev.preventDefault();
	    			
			        preloaderOn("nocover");
			        $('#create-container .modal-content').html('');
			        var id = $(this).closest('tr').find('th').text();
			        var urlString =
			        	"/offer?action=get"
			        			+"&id=" + id
			        			+"&projection=image";
	    			
	    			$.ajax({
			            url: urlString,
			            type: "POST",
			            cache : false
			        }).done(function(data) {
			        	
			        	if(data.result[0] != ""){
			        		
			        		$('#create-container .modal-content')
			        			.html('<img src="' + data.result[0] + '">');
			        	} else {
			        		alert('Ошибка');
			        	}
			        }).fail(function(jqXHR, textStatus, errorThrown) {
						  
						alert("Ошибка: " + jqXHR);
					}).always(function() {
					    
						preloaderOff();
				  	});
	    		});

			setTimeout(preloaderOff, 500);
		};
	});
</script>