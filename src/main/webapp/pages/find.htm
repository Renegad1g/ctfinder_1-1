<div id="find-container" class="container">
	<div class="row flex">
		<div class="col s1 valign-wrapper">
			<ul id="slide-out" class="sidenav">
				<li>
					<ul class="collapsible">
						<li>
							<div class="collapsible-header">
								<i class="material-icons">list</i>Категории
							</div>
							<div class="collapsible-body">
								<form id="categories" action="#">
									<!-- <p>
										<label for="category-1"> <input id="category-1"
											type="checkbox" /><span>волонтерская помощь</span>
										</label>
									</p>
									<p>
										<label> <input type="checkbox" /> <span>дизайн</span>
										</label>
									</p>
									<p>
										<label> <input type="checkbox" /> <span>естественные
												науки</span>
										</label>
									</p>
									<p>
										<label> <input type="checkbox" /> <span>помощь
												животным</span>
										</label>
									</p>
									<p>
										<label> <input type="checkbox" /> <span>природа</span>
										</label>
									</p>
									<p>
										<label> <input type="checkbox" /> <span>проектирование
												техники</span>
										</label>
									</p>
									<p>
										<label> <input type="checkbox" /> <span>промышленность</span>
										</label>
									</p>
									<p>
										<label> <input type="checkbox" /> <span>разработка
												приложений</span>
										</label>
									</p>
									<p>
										<label> <input type="checkbox" /> <span>общественные
												науки</span>
										</label>
									</p> -->
								</form>
							</div>
						</li>
						<li>
							<div class="collapsible-header">
								<i class="material-icons">filter_list</i>Фильтр
							</div>
							<div class="collapsible-body">
								<form id="filters" action="#">
									<div class="row">
										<div class="input-field col s12">
											<input type="text" id="country-input" class="autocomplete">
											<label for="country-input">Страна</label>
										</div>
									</div>
									<div class="row">
										<div class="input-field col s12">
											<input type="text" id="city-input" class="autocomplete">
											<label for="city-input">Город</label>
										</div>
									</div>
									<div class="row">
										<div class="input-field col s12">
											<input type="number" id="c-count-input" min="1" placeholder="&infin;" value="">
											<label for="c-count-input">Вакантных мест</label>
										</div>
									</div>
								</form>
							</div>
						</li>
						<li>
							<div class="collapsible-header">
								<i class="material-icons">sort</i>Сортировка
							</div>
							<div class="collapsible-body">
								<form  id="order-rules" action="#">
									<p>
										<label> <input id="sort-created-desc" name="sort-group" type="radio" checked="checked" />
											<span>сначала новые по дате создания</span>
										</label>
									</p>
									<p>
										<label> <input  id="sort-created-asc" name="sort-group" type="radio" />
											<span>сначала старые по дате создания</span>
										</label>
									</p>
									<p>
										<label> <input id="sort-urgency-asc" name="sort-group" type="radio" /> <span>от
												краткосрочных к длительным</span>
										</label>
									</p>
									<p>
										<label> <input id="sort-urgency-desc" name="sort-group" type="radio" /> <span>от
												длительных к краткосрочным</span>
										</label>
									</p>
									<p>
										<label> <input id="sort-start-asc" name="sort-group" type="radio" /> <span>сначала ближайшие по дате старта</span>
										</label>
									</p>
									<p>
										<label> <input id="sort-start-desc" name="sort-group" type="radio" /> <span>сначала позднейшие по дате старта</span>
										</label>
									</p>
									<p>
										<label> <input id="sort-finish-asc" name="sort-group" type="radio" /> <span>сначала ближайшие по дате окончания</span>
										</label>
									</p>
									<p>
										<label> <input id="sort-finish-desc" name="sort-group" type="radio" /> <span>сначала позднейшие по дате окончания</span>
										</label>
									</p>
								</form>
							</div>
						</li>
					</ul>
				</li>
			</ul>
			<a href="#" data-target="slide-out" class="sidenav-trigger"><i
				class="material-icons" style="pointer-events: none">settings</i></a>
		</div>
		<div class="col s11">
			<div class="row">
				<div class="col s12">
					<form>
						<div class="input-field">
							<input id="search" class="autocomplete" type="search" required> <label
								class="label-icon" for="search"><i class="material-icons">search</i></label>
						</div>
					</form>
				</div>
			</div>
			<div class="row">
				<div class="col s6">
					<form>
						<label for="calendarFrom"> Начиная с: </label>
						<input id="calendarFrom" name="calendarFrom" type="text" class="datepicker"> </input>
					</form>
				</div>
				<div class="col s6">
					<form>
						<label for="calendarTo"> по: </label>
						<input id="calendarTo" name="calendarTo" type="text" class="datepicker"> </input>
					</form>
				</div>
			</div>
		</div>
	</div>
	<!-- Сюда при помощи jquery помещается шаблон grid, заполненный данными offers -->
	<div class="row">
		<div class="col s12 m12 l12 xl12">
			<div id="offer-grid-container">
				<div class="row flex"></div>
			</div>
		</div>
	</div>
	<div class="row">
		<div class="col s12 m12 l12 xl12">
			<img id="pointer-down" src="../img/pointer_down.gif" alt="pointer down">
		</div>
	</div>
	<div>
		<div id="offer-details" class="modal">
			<div class="modal-content">
			    
			</div>
			<div class="modal-footer">
				<a href="#!" class="modal-action modal-close waves-effect waves-green btn-flat">Ok</a>
			</div>
		</div>	
	</div>
</div>
<script type="text/javascript">
	
	//активируем боковую панель и схлопывающиеся области
	$('.sidenav').sidenav();
	$('.collapsible').collapsible();
	$('#find-container .modal').modal();
	/*$('#find-container .modal').modal(
		onOpenStart: function() { 
			
		}
	);*/
	//Определяем текущую дату
	var nowDate = new Date();
	//Устанавливаем в элементы ввода Дата (Календарь) текущую дату,
    //вызывая на ней предварительно нашу корректирующую функцию
	$('#find-container #calendarFrom, #find-container #calendarTo')
		.val(new Date().toDateInputValue());
	//активируем элементы ввода Дата (Календарь)
	$('#find-container #calendarFrom, #find-container #calendarTo').datepicker({
    	'format':'dd-mm-yyyy'
    	, 'setDefaultDate':true
    	, 'autoClose':true
	});
	
	/*$('input#country-input').autocomplete({
      data: {
        "USA": null,
        "Россия": null,
        "Украина": null
      },
    });*/

    /*$('input#city-input').autocomplete({
      data: {
        "Киев": null,
        "Львов": null,
        "Мариуполь": null
      },
    });*/
	
	app.handler(function() {

		//console.log('this ' + $(this));
		//var $container = $(this).find("#page-container");
		//console.log('container ' + $container);

		return function(params) {

			//Пустые объекты для хранения данных автодолнения
			//выбора страны и города, которые будут приходить с сервера 
			var countryAutocompleteItems = {};
			var cityAutocompleteItems = {};
			
			var windowWidth = $(window).width();
			var offerLimitDefault = 2;
			if(windowWidth > 1200){
				offerLimitDefault = 3;
			} else {
				offerLimitDefault = 2;
			}
			/*if(windowWidth <= 600){
				offerLimitDefault = 2;
			} else if(windowWidth <= 992){
				offerLimitDefault = 2;
			} else if(windowWidth <= 1200){
				offerLimitDefault = 3;
			}*/
			console.log(windowWidth);
			console.log(offerLimitDefault);
			//Начальные настройки бесконечной прокрутки предложений
			var cursorString = null;
		    var offerLimit = offerLimitDefault;
		    var offerCounter = 0;
		    var offerGridPopulating = false;
		    
		    $('#offer-grid-container > div').html(noItemsImage);
		    
		    //Функция сброса бесконечной прокрутки предложений
		    //в начальное состояние
			function resetInfinityScrollInfo(){
				
				offerLimit = offerLimitDefault;
			    offerCounter = 0;
			    offerGridPopulating = false;
			    cursorString = null;
			    
			    $('#offer-grid-container > div').html(noItemsImage);
			}
			//resetInfinityScrollInfo();
			//Настройка календарей - верхней и нижней границ временного диапазона
			
			
			//Получаем с сервера все типы событий
			//и заполняем ими раздел "категрии" в боковой панели
			$.ajax({
				type: 'POST',
				url: '/offertype?action=get-all',
				dataType: 'json',
				cache: false
			}).done(function(responseText, textStatus, jqXHR) {
				  
				//console.log(responseText);
				//Готовим шаблон списка при помощи библиотеки Hogan
	            var template = Hogan.compile(
	                '{{#result}}'
	                +'<p>'
						+'<label for="category-{{id}}"> <input id="category-{{id}}"'
							+'type="checkbox" /><span>{{description}}</span>'
						+'</label>'
					+'</p>'
					+'{{/result}}'
	            );
	            //Заполняем шаблон данными и помещаем на веб-страницу
				$('#categories').html(template.render(responseText));
				
			}).fail(function(jqXHR, textStatus, errorThrown) {
				  
				console.log(textStatus);
			});
			
			/* Filter: country n city autocomplete */
			
			var onCountryAutocompleteCallback = function(){

		        /*$('#events-container').html('<div class="preloader-wrapper big active"> <div class="spinner-layer spinner-green-only"> <div class="circle-clipper left"> <div class="circle"></div> </div><div class="gap-patch"> <div class="circle"></div> </div><div class="circle-clipper right"> <div class="circle"></div> </div> </div> </div>');
		        $.ajax({
		            url: "/events-ajax",
		            type: "POST",
		            data: {
		                //'type': this.id
		                'action': 'fetch-events-by-title'
		                , 'title': $('input#search').val()
		            },
		            cache : false
		        }).done(function(data) {
		            
		            //помещаем на веб-страницу
		            $('#events-container').html(data);
		        });*/
				console.log("country autocompleted");
			}
			
			var onCityAutocompleteCallback = function(){

				console.log("city autocompleted");
			}
			
			//country autocomplete
		    $('input#country-input').autocomplete({
		        data: countryAutocompleteItems
		        , onAutocomplete: onCountryAutocompleteCallback
			});
			
		    var countryAutocomplete =
		    	M.Autocomplete.getInstance($('input#country-input'));
			
			$('input#country-input').keydown(function(e) { 
					
				// only user-triggered event
				 if (e.originalEvent) {
					 $('input#city-input').val("");
					 $.ajax({
					        url: "/country",
					        type: "POST",
					        data: {
					            'action': 'autocomplete'
					            , 'substring': $('input#country-input').val()
					        },
					        cache : false
					    }).done(function(newAutocompleteItems) {
					    	
					    	var newAutocompleteItemsObj =
					    		newAutocompleteItems.result.reduce(function(acc, cur, i) {
					  		  		acc[cur] = null;
					  		  		return acc;
					  			}, {});
					    	countryAutocomplete.updateData(newAutocompleteItemsObj);
					    	//
					    	console.log(countryAutocomplete);
					    	countryAutocomplete.open();
					    	//$('input#country-input').keydown();
					    	/*if(typeof countryAutocomplete.open === 'function') {
					    		
					    		countryAutocomplete.open();
					    	}*/
					});
				 }
				 else {
				   // code-triggered event
					 //$('input#country-input').keyup();
				 }
			});
			
			//city autocomplete
		    $('input#city-input').autocomplete({
		        data: cityAutocompleteItems
		        , onAutocomplete: onCityAutocompleteCallback
			});
			
		    var cityAutocomplete =
		    	M.Autocomplete.getInstance($('input#city-input'));
			
			$('input#city-input').keydown(function(e) { 
					
				// only user-triggered event
				 if (e.originalEvent) {
				 	
					 $.ajax({
					        url: "/city",
					        type: "POST",
					        data: {
					            'action': 'autocomplete'
				            	, 'country': $('input#country-input').val()
					            , 'substring': $('input#city-input').val()
					        },
					        cache : false
					    }).done(function(newAutocompleteItems) {
					    	
					    	var newAutocompleteItemsObj =
					    		newAutocompleteItems.result.reduce(function(acc, cur, i) {
					  		  		acc[cur] = null;
					  		  		return acc;
					  			}, {});
					    	cityAutocomplete.updateData(newAutocompleteItemsObj);
					    	console.log(cityAutocomplete);
							
					    	cityAutocomplete.open();
					    	
					    	//$('input#city-input').keydown();
					});
				 }
				 else {
				   // code-triggered event
					 //$('input#city-input').keyup();
				 }
			});
						
			/* Offers grid */
			
			var populateOffersGrid = function(orderByParam){
		    	
				//Добавляем на место таблицы полосу бесконечного прогресса -
				//пока будет ожидаться ответ сервера
		        preloaderOn("nocover");
				//Собираем отформатированные даты из элементов Календарь
		        var dateFrom = $('#find-container #calendarFrom').val();
		        var dateTo = $('#find-container #calendarTo').val();
		        //Составляем строку запроса на сервер
		        //для получения отфильтрованных данных о заданиях
		        var urlString =
		        	"/offer?action=get-range"
		        			+"&limit=" + offerLimit
		        			+"&created-date-from=" + dateFrom
		        			+"&created-date-to=" + dateTo
		        			+ ((cursorString != null) ? ("&cursor=" + cursorString) : "");
		      	//+"&order-by=sort-created-desc"
				
		    	$.ajax({
		            url: urlString,
		            type: "POST",
		            data: orderByParam,
		            cache : false
		        }).done(function(data) {
		            
		            //помещаем на веб-страницу
		            //$('#events-container').html(data);
		            
		        	fetchedCount = data.result[0].items.length;
		        	if(data.result[0].cursor_str != "end" && fetchedCount > 0){
		        		
		        		cursorString = data.result[0].cursor_str;
		        		if(offerCounter == 0 && fetchedCount > 0){
		        			$('#offer-grid-container > div').html('');
		        		}
		        		offerCounter += fetchedCount;
		        		var offerCounterTail = offerCounter % offerLimitDefault;
		        		if(offerCounterTail != 0 && offerLimit == offerLimitDefault){
			        		
			        		offerLimit += offerLimitDefault - offerCounterTail;
			        		
			        	} else if(offerLimit != offerLimitDefault) {
			        		
			        		offerLimit = offerLimitDefault;
			        	}

		        		//if(fetchedCount > 0){
				            //Готовим шаблон offer grid item при помощи библиотеки Hogan
				            //TODO
						  	var template = Hogan.compile(
					  			'{{#items}}'
				                +'<div class="col s12 m12 l6 xl4">'
					                +'<div class="card hoverable {{offer_type}}">'
					                    +'<div class="card-image">'
					                      +'<img src="{{image}}">'
					                      +'<div class="card-title">'
					                      	+'<div>{{title}}</div>'
					                      	+'<div>({{offer_type}})</div>'
					                      	+'<div class="card-title-date">{{created_at}}</div>'
					                      +'</div>'
					                    +'</div>'
					                    +'<div class="card-content">'
					                      +'<p>{{content_preview}}</p>'
					                    +'</div>'
					                    +'<div class="card-action">'
					                      +'<a data-offerid="{{id}}" class="modal-trigger" href="#offer-details">Details...</a>'
					                    +'</div>'
					                  +'</div>'
					            +'</div>'
					      		+ '{{/items}}'
					  		);
						  	//Заполняем шаблон данными и помещаем на веб-страницу
							$('#offer-grid-container > div').append(template.render(data.result[0]));
						  	//
							$('#find-container #pointer-down').css('display', 'block');
						//}

				  		/*//Расцветка для разных состояний заказа, классы цветов определены в файле стилей
			            $("table td:contains('забронирован')").parent().addClass("BlueRow");
			            $("table td:contains('выполнен')").parent().addClass("GreenRow");
			            //$("table td:contains('отменен')").parent().addClass("RedRow");
			            //Блокируем кнопки работы со строками таблицы, пока не будет выбрана строка
			            $("#doneOrder, #cancelOrder, #deleteOrder").attr('disabled', '');
			            //Устанавливаем обработчик кликов на все строки таблицы кроме заголовка
			            $("table tr:not(:first)").unbind("click");
			            $("table tr:not(:first)").click(function(){

			                //Разблокируем кнопки, когда выбрана строка таблицы
			                $("#doneOrder, #cancelOrder, #deleteOrder").removeAttr('disabled');
			                //Отмечаем текст выбранной строки зеленым цветом, с остальных строк выделение убираем
			                //(оно могло быть ранее установлено на одну из строк)
			                $(this).addClass("selectedTableRow").siblings().removeClass("selectedTableRow");
			            });
			            //Очищаем списки в форме
			            $('#manicurists-select select')
			                .find('option')
			                .remove();

			            $('#time-select select')
			                .find('option')
			                .remove();
			            //Отключаем элементы ввода в форме
			            $('#time-select select').attr('disabled', '');
			            $('form#create-order button').attr('disabled', '');
			            //Заполняем список выбора мастеров
			            populateManicuristsList();
			            //Активируем список выбора времени
			            $('#time-select select').formSelect();*/
		        	} else {
		        		
		        		$('#find-container #pointer-down').css('display', 'none');
		        		offerCounter = "full";
		        	}
		        	preloaderOff();
		        	offerGridPopulating = false;
		        });
			}

			/* Filter */
			
			var doFilter = function(orderByParam){

				populateOffersGrid(orderByParam);
			}
			
			//Apply the filter
			doFilter({
                'order-by': $('form#order-rules input[type=radio]:checked').attr('id')
			});
			
			//обработчик выбора одного из чекбоксов фильтра по	
			$('form#order-rules input[type=radio]').unbind("change");
			$('form#order-rules input[type=radio]').change(function() {

			    if(this.checked) {
					
			    	resetInfinityScrollInfo();
			    	doFilter({
		                'order-by': $('form#order-rules input[type=radio]:checked').attr('id')
					});
			    }
			});
			
			/* Date range */
			
			var onDateRangeChanged = function(){

				if(!offerGridPopulating){
					
	    			resetInfinityScrollInfo();
	    			doFilter({
		                'order-by': $('form#order-rules input[type=radio]:checked').attr('id')
					});
    			} else {
    				
    				setTimeout(onDateRangeChanged, 100);
    			}
			}
			
			$(document).unbind("change");
			$(document).on(
		    		'change'
		    		, '#find-container #calendarFrom, #find-container #calendarTo'
		    		, onDateRangeChanged);
			
			/* Grid infinity scroll */
			
			var onScroll = function(){

				if(offerCounter != "full" && !offerGridPopulating){
					
					var footerHeight = 283;
					if ($(window).scrollTop() >=
							($(document).height()
								- footerHeight
								- $(window).height())) {
						offerGridPopulating = true;  
						doFilter({
			                'order-by': $('form#order-rules input[type=radio]:checked').attr('id')
						});
				    }
				}
			}
			
			var onClickNext = function(){

				if(offerCounter != "full" && !offerGridPopulating){

					offerGridPopulating = true;  
					doFilter({
		                'order-by': $('form#order-rules input[type=radio]:checked').attr('id')
					});
				} else if(offerCounter == "full"){
					
					$('#find-container #pointer-down').css('display', 'none');
				}
			}
			
			$(window).unbind("scroll");
			$(window).scroll(onScroll);
			
			$('#find-container #pointer-down').unbind("click");
			$('#find-container #pointer-down').click(onClickNext);
			
			/* Offer details modal */
			
			$(document).unbind("click");
			$(document).on(
		    		'click'
		    		, '#offer-grid-container .card-action > a'
		    		, function(){
		    			var id = $(this).data('offerid');
		    			console.log(id);
		    			$('#offer-details .modal-content').html(id);
		    		});

			setTimeout(preloaderOff, 500);
		};
	});
</script>